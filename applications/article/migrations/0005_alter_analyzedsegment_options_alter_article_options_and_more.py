# Generated by Django 5.2.4 on 2025-08-07 07:31

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('article', '0004_alter_articleauthor_options_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='analyzedsegment',
            options={'ordering': ['article', 'created_at'], 'verbose_name': 'Analyzed text segment', 'verbose_name_plural': 'Analyzed text segments'},
        ),
        migrations.AlterModelOptions(
            name='article',
            options={'ordering': ['-updated_at', '-created_at'], 'verbose_name': 'Scientific article', 'verbose_name_plural': 'Scientific articles'},
        ),
        migrations.AlterModelOptions(
            name='articleauthor',
            options={'verbose_name': 'Author associated with the article', 'verbose_name_plural': 'Authors associated with articles'},
        ),
        migrations.AlterModelOptions(
            name='articlecontent',
            options={'verbose_name': 'Article content from the source', 'verbose_name_plural': 'Article content from sources'},
        ),
        migrations.AlterModelOptions(
            name='articleuser',
            options={'verbose_name': 'User associated with the article', 'verbose_name_plural': 'Users associated with articles'},
        ),
        migrations.AlterModelOptions(
            name='referencelink',
            options={'ordering': ['order'], 'verbose_name': 'Bibliographic reference', 'verbose_name_plural': 'Bibliographic references'},
        ),
        migrations.AlterField(
            model_name='analyzedsegment',
            name='article',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analyzed_segments', to='article.article', verbose_name='Target article'),
        ),
        migrations.AlterField(
            model_name='analyzedsegment',
            name='cited_references',
            field=models.ManyToManyField(blank=True, related_name='supporting_segments', to='article.referencelink', verbose_name='Cited/Related References'),
        ),
        migrations.AlterField(
            model_name='analyzedsegment',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Date of creation'),
        ),
        migrations.AlterField(
            model_name='analyzedsegment',
            name='inline_citation_markers',
            field=models.JSONField(blank=True, default=list, help_text="List of text citation markers found in the segment, e.g. ['[1]', '(Smith 2023)']", null=True, verbose_name='Inline quotation markers'),
        ),
        migrations.AlterField(
            model_name='analyzedsegment',
            name='llm_analysis_notes',
            field=models.TextField(blank=True, null=True, verbose_name='LLM Analysis Notes'),
        ),
        migrations.AlterField(
            model_name='analyzedsegment',
            name='llm_model_name',
            field=models.CharField(blank=True, help_text="Ex.: 'gpt-4o-mini'", max_length=100, null=True, verbose_name='Name of LLM model'),
        ),
        migrations.AlterField(
            model_name='analyzedsegment',
            name='llm_veracity_score',
            field=models.FloatField(blank=True, null=True, verbose_name='Veracity score from LLM'),
        ),
        migrations.AlterField(
            model_name='analyzedsegment',
            name='prompt_used',
            field=models.TextField(blank=True, null=True, verbose_name='Prompt used'),
        ),
        migrations.AlterField(
            model_name='analyzedsegment',
            name='section_key',
            field=models.CharField(blank=True, help_text='For example, introduction, methods, or a custom section header.', max_length=255, null=True, verbose_name='Section Key/Title'),
        ),
        migrations.AlterField(
            model_name='analyzedsegment',
            name='segment_text',
            field=models.TextField(help_text='A user-selected or automatically extracted piece of text.', verbose_name='Segment text'),
        ),
        migrations.AlterField(
            model_name='analyzedsegment',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='User who created/modified the segment'),
        ),
        migrations.AlterField(
            model_name='article',
            name='abstract',
            field=models.TextField(blank=True, null=True, verbose_name='Abstract'),
        ),
        migrations.AlterField(
            model_name='article',
            name='authors',
            field=models.ManyToManyField(blank=True, related_name='articles', through='article.ArticleAuthor', to='article.author', verbose_name='Authors'),
        ),
        migrations.AlterField(
            model_name='article',
            name='best_oa_pdf_url',
            field=models.URLField(blank=True, help_text='Link to PDF of the best OA version from Unpaywall', max_length=2048, null=True, verbose_name='URL PDF of the best OA version'),
        ),
        migrations.AlterField(
            model_name='article',
            name='best_oa_url',
            field=models.URLField(blank=True, help_text='Link to the best OA version (HTML/landing) from Unpaywall', max_length=2048, null=True, verbose_name='URL of the best OA version'),
        ),
        migrations.AlterField(
            model_name='article',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Date of creation'),
        ),
        migrations.AlterField(
            model_name='article',
            name='is_user_initiated',
            field=models.BooleanField(db_index=True, default=False, help_text='True if this article was added directly by the user, not as a related link.', verbose_name='Added by user directly'),
        ),
        migrations.AlterField(
            model_name='article',
            name='journal_name',
            field=models.CharField(blank=True, max_length=512, null=True, verbose_name='Name of the journal/source'),
        ),
        migrations.AlterField(
            model_name='article',
            name='oa_license',
            field=models.CharField(blank=True, help_text='OA version license from Unpaywall (e.g., cc-by, cc-by-nc)', max_length=100, null=True, verbose_name='OA version license'),
        ),
        migrations.AlterField(
            model_name='article',
            name='oa_status',
            field=models.CharField(blank=True, help_text='Open Access status from Unpaywall (e.g., gold, green, bronze, closed)', max_length=50, null=True, verbose_name='Open Access Status'),
        ),
        migrations.AlterField(
            model_name='article',
            name='pdf_file',
            field=models.FileField(blank=True, max_length=500, null=True, upload_to='articles_pdf/', verbose_name='PDF fail'),
        ),
        migrations.AlterField(
            model_name='article',
            name='pdf_text',
            field=models.TextField(blank=True, help_text='Text content of pdf file.', null=True, verbose_name='Text from PDF'),
        ),
        migrations.AlterField(
            model_name='article',
            name='pdf_url',
            field=models.URLField(blank=True, help_text='PDF download link', max_length=2048, null=True, verbose_name='URL PDF'),
        ),
        migrations.AlterField(
            model_name='article',
            name='primary_source_api',
            field=models.CharField(blank=True, help_text='The API from which the primary metadata for this post (title, abstract) was taken.', max_length=100, null=True, verbose_name='Main Source API'),
        ),
        migrations.AlterField(
            model_name='article',
            name='publication_date',
            field=models.DateField(blank=True, null=True, verbose_name='Date of publication'),
        ),
        migrations.AlterField(
            model_name='article',
            name='title',
            field=models.TextField(verbose_name='Article Title'),
        ),
        migrations.AlterField(
            model_name='article',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='Date of update'),
        ),
        migrations.AlterField(
            model_name='article',
            name='users',
            field=models.ManyToManyField(help_text='Users associated with this article', related_name='articles', through='article.ArticleUser', to=settings.AUTH_USER_MODEL, verbose_name='Users'),
        ),
        migrations.AlterField(
            model_name='articleauthor',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Date of creation'),
        ),
        migrations.AlterField(
            model_name='articleauthor',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='Date of update'),
        ),
        migrations.AlterField(
            model_name='articlecontent',
            name='article',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contents', to='article.article', verbose_name='Article'),
        ),
        migrations.AlterField(
            model_name='articlecontent',
            name='content',
            field=models.TextField(verbose_name='Content'),
        ),
        migrations.AlterField(
            model_name='articlecontent',
            name='format_type',
            field=models.CharField(help_text="Ex.: 'json_metadata', 'full_text_xml_pmc', 'xml_fulltext_jats', 'abstract_text', 'references_list_json'", max_length=50, verbose_name='Format type'),
        ),
        migrations.AlterField(
            model_name='articlecontent',
            name='retrieved_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Date and time of upload'),
        ),
        migrations.AlterField(
            model_name='articlecontent',
            name='source_api_name',
            field=models.CharField(help_text="Ex.: 'pubmed', 'crossref_api', 'arxiv_api'", max_length=100, verbose_name='Source API Name'),
        ),
        migrations.AlterField(
            model_name='articleuser',
            name='cleaned_text_for_llm',
            field=models.TextField(blank=True, help_text='Full text of the article, cleaned and prepared for LLM analysis. Can be added manually.', null=True, verbose_name='Cleaned text for LLM'),
        ),
        migrations.AlterField(
            model_name='articleuser',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Date of creation'),
        ),
        migrations.AlterField(
            model_name='articleuser',
            name='is_manually_added_full_text',
            field=models.BooleanField(default=False, help_text='Indicates whether the full text of the article was added manually by the user.', verbose_name='Полный текст добавлен вручную'),
        ),
        migrations.AlterField(
            model_name='articleuser',
            name='primary_source_api',
            field=models.CharField(blank=True, help_text='The API from which the primary metadata for this post (title, abstract) was taken.', max_length=100, null=True, verbose_name='Primary Source API'),
        ),
        migrations.AlterField(
            model_name='articleuser',
            name='structured_content',
            field=models.JSONField(blank=True, default=dict, help_text='Contents of the article, divided into sections (Ex.: abstract, introduction, methods, results, discussion, conclusion)', null=True, verbose_name='Structured content'),
        ),
        migrations.AlterField(
            model_name='articleuser',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='Date of update'),
        ),
        migrations.AlterField(
            model_name='referencelink',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Date of creation'),
        ),
        migrations.AlterField(
            model_name='referencelink',
            name='log_messages',
            field=models.TextField(blank=True, help_text='Messages about the search process, loading, errors.', null=True, verbose_name='Processing logs'),
        ),
        migrations.AlterField(
            model_name='referencelink',
            name='manual_data_json',
            field=models.JSONField(blank=True, help_text='JSON with metadata of the cited article if it is added manually (title, authors, year, etc.).', null=True, verbose_name='Manually entered data'),
        ),
        migrations.AlterField(
            model_name='referencelink',
            name='raw_reference_text',
            field=models.TextField(blank=True, help_text='The link text as it appears in the original article.', null=True, verbose_name='Original text of the reference'),
        ),
        migrations.AlterField(
            model_name='referencelink',
            name='resolved_article',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cited_by_references', to='article.article', verbose_name='Related article in DB'),
        ),
        migrations.AlterField(
            model_name='referencelink',
            name='source_article',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='references_made', to='article.article', verbose_name='Source article'),
        ),
        migrations.AlterField(
            model_name='referencelink',
            name='status',
            field=models.CharField(choices=[('pending_doi_input', 'Waiting for input/DOI search'), ('doi_lookup_in_progress', 'Searching DOI for reference'), ('doi_provided_needs_lookup', 'DOI found, waiting for article to be uploaded'), ('article_fetch_in_progress', 'Loading article by DOI'), ('article_linked', 'Article found and linked'), ('article_not_found', 'Article not found by DOI'), ('manual_entry', 'Data entered manually'), ('manual_metadata_only', 'Metadata entered manually (no connection)'), ('error_doi_lookup', 'Error while searching DOI'), ('error_article_fetch', 'Error loading article'), ('error_processing', 'Error while processing')], default='pending_doi_input', max_length=50, verbose_name='Reference status'),
        ),
        migrations.AlterField(
            model_name='referencelink',
            name='target_article_doi',
            field=models.CharField(blank=True, db_index=True, help_text='DOI of the article being referenced. Can be entered/edited by the user.', max_length=255, null=True, verbose_name='DOI of the cited article'),
        ),
        migrations.AlterField(
            model_name='referencelink',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='Date of update'),
        ),
    ]
